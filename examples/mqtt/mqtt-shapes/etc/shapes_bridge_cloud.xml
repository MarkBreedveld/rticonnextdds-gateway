<?xml version="1.0"?>
<!--
  (c) 2020 Copyright, Real-Time Innovations, Inc. (RTI) All rights reserved. 

  RTI grants Licensee a license to use, modify, compile, and create
  derivative works of the software solely for use with RTI Connext DDS.
  Licensee may redistribute copies of the software provided that all such
  copies are subject to this license.
  The software is provided "as is", with no warranty of any type, including
  any warranty for fitness for any purpose. RTI is under no obligation to
  maintain or support the software.  RTI shall not be liable for any
  incidental or consequential damages arising out of the use or inability to
  use the software.
-->

<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://community.rti.com/schema/6.0.0/rti_routing_service.xsd">

    <plugin_library name="MqttShapesPlugins">
        <adapter_plugin name="Mqtt">
            <dll>rtimqttadapter</dll>
            <create_function>
                RTI_RS_MQTT_AdapterPlugin_create
            </create_function>
        </adapter_plugin>
        <transformation_plugin name="PrimitiveField">
            <dll>rtifieldtransf</dll>
            <create_function>
                RTI_TSFM_Field_PrimitiveTransformationPlugin_create
            </create_function>
        </transformation_plugin>
    </plugin_library>

    <qos_library name="MqttShapesQos">
        <qos_profile name="default" base_name="BuiltinQosLibExp::Generic.BestEffort" is_default_qos="true">
            <datareader_qos>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>1</depth>
                </history>
            </datareader_qos>
            <datawriter_qos>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>1</depth>
                </history>
            </datawriter_qos>
        </qos_profile>
        <qos_profile name="mqtt_message_reader" base_name="default">
            <datareader_qos>
                <reader_resource_limits>
                    <dynamically_allocate_fragmented_samples>
                        true
                    </dynamically_allocate_fragmented_samples>
                </reader_resource_limits>
                <property>
                    <value>
                        <element>
                            <name>dds.data_reader.history.memory_manager.fast_pool.pool_buffer_max_size</name>
                            <value>10485760</value>
                        </element>
                    </value>
                </property>
            </datareader_qos>
        </qos_profile>
        <qos_profile name="mqtt_message_writer" base_name="default">
            <datawriter_qos>
                <property>
                    <value>
                        <element>
                            <name>dds.data_writer.history.memory_manager.fast_pool.pool_buffer_max_size</name>
                            <value>10485760</value>
                        </element>
                    </value>
                </property>
            </datawriter_qos>
        </qos_profile>
        <qos_profile name="shapes_reader" base_name="default">
        </qos_profile>
        <qos_profile name="shapes_writer" base_name="default">
        </qos_profile>
    </qos_library>

    <types>
        <struct name= "ShapeType">
            <member name="color" stringMaxLength="128" type="string" key="true"/>
            <member name="x" type="int32"/>
            <member name="y" type="int32"/>
            <member name="shapesize" type="int32"/>
        </struct>
        <module name="RTI">
            <module name="MQTT">
                <enum name="QosLevel">
                    <enumerator name="UNKNOWN"/>
                    <enumerator name="ZERO"/>
                    <enumerator name="ONE"/>
                    <enumerator name="TWO"/>
                </enum>
                <struct name= "MessageInfo" nested="true">
                    <member name="id" type="int32"/>
                    <member name="qos_level" type="nonBasic" nonBasicTypeName= "RTI::MQTT::QosLevel"/>
                    <member name="retained" type="boolean"/>
                    <member name="duplicate" type="boolean"/>
                </struct>
                <struct name= "MessagePayload" nested="true">
                    <member name="data" sequenceMaxLength="-1" type="byte"/>
                </struct>
                <struct name= "Message">
                    <member name="topic" stringMaxLength="-1" type="string" optional="true"/>
                    <member name="info" type="nonBasic" nonBasicTypeName= "RTI::MQTT::MessageInfo" optional="true"/>
                    <member name="payload" type="nonBasic" nonBasicTypeName= "RTI::MQTT::MessagePayload"/>
                </struct>
                <struct name= "KeyedMessage">
                    <member name="topic" stringMaxLength="-1" type="string" key="true"/>
                    <member name="info" type="nonBasic" nonBasicTypeName= "RTI::MQTT::MessageInfo" optional="true"/>
                    <member name="payload" type="nonBasic" nonBasicTypeName= "RTI::MQTT::MessagePayload"/>
                </struct>
            </module>
        </module>
    </types>

    <routing_service name="shapes_bridge">

        <domain_route name="default">

            <participant name="dds">
                <domain_id>46</domain_id>
                <registered_type name="ShapeType" type_name="ShapeType"/>
                <registered_type name="RTI::MQTT::Message" type_name="RTI::MQTT::Message"/>
                <registered_type name="RTI::MQTT::KeyedMessage" type_name="RTI::MQTT::KeyedMessage"/>
            </participant>

            <connection name="adafruit" plugin_name="MqttShapesPlugins::Mqtt">
                <property>
                    <value>
                        <element>
                            <name>client.id</name>
                            <value>shapes_bridge_adafruit</value>
                        </element>
                        <element>
                            <name>client.servers</name>
                            <value>ssl://io.adafruit.com:8883</value>
                        </element>
                        <element>
                            <name>client.username</name>
                            <value>$(RTI_MQTTSHAPES_IO_USERNAME)</value>
                        </element>
                        <element>
                            <name>client.password</name>
                            <value>$(RTI_MQTTSHAPES_IO_KEY)</value>
                        </element>
                        <element>
                            <name>client.ssl.verify_server_certificate</name>
                            <value>false</value>
                        </element>
                    </value>
                </property>
                <registered_type name="ShapeType" type_name="ShapeType"/>
                <registered_type name="RTI::MQTT::Message" type_name="RTI::MQTT::Message"/>
                <registered_type name="RTI::MQTT::KeyedMessage" type_name="RTI::MQTT::KeyedMessage"/>
            </connection>

            <session name="adafruit" enabled="$(RTI_MQTTSHAPES_SESSION_ENABLED_IO)">
                <route name="dashboard">
                    <dds_input name="Square" participant="dds">
                        <registered_type_name>ShapeType</registered_type_name>
                        <content_filter>
                            <expression>
                                color = 'ORANGE'
                            </expression>
                        </content_filter>
                        <datareader_qos base_name="MqttShapesQos::shapes_reader">
                            <time_based_filter>
                                <minimum_separation>
                                    <sec>10</sec>
                                    <nanosec>0</nanosec>
                                </minimum_separation>
                            </time_based_filter>
                        </datareader_qos>
                    </dds_input>
                    <output name="mqtt_x" connection="adafruit">
                        <registered_type_name>RTI::MQTT::Message</registered_type_name>
                        <property>
                            <value>
                                <element>
                                    <name>publication.topic</name>
                                    <value>$(RTI_MQTTSHAPES_IO_USERNAME)/f/shapesdemo.x</value>
                                </element>
                            </value>
                        </property>
                        <transformation plugin_name="MqttShapesPlugins::PrimitiveField">
                            <property>
                                <value>
                                    <element>
                                        <name>buffer_member</name>
                                        <value>payload.data</value>
                                    </element>
                                    <element>
                                        <name>field</name>
                                        <value>x</value>
                                    </element>
                                    <element>
                                        <name>field_type</name>
                                        <value>long</value>
                                    </element>
                                </value>
                            </property>
                        </transformation>
                    </output>
                    <output name="mqtt_y" connection="adafruit">
                        <registered_type_name>RTI::MQTT::Message</registered_type_name>
                        <property>
                            <value>
                                <element>
                                    <name>publication.topic</name>
                                    <value>$(RTI_MQTTSHAPES_IO_USERNAME)/f/shapesdemo.y</value>
                                </element>
                            </value>
                        </property>
                        <transformation plugin_name="MqttShapesPlugins::PrimitiveField">
                            <property>
                                <value>
                                    <element>
                                        <name>buffer_member</name>
                                        <value>payload.data</value>
                                    </element>
                                    <element>
                                        <name>field</name>
                                        <value>y</value>
                                    </element>
                                    <element>
                                        <name>field_type</name>
                                        <value>int32</value>
                                    </element>
                                </value>
                            </property>
                        </transformation>
                    </output>
                    <output name="mqtt_size" connection="adafruit">
                        <registered_type_name>RTI::MQTT::Message</registered_type_name>
                        <property>
                            <value>
                                <element>
                                    <name>publication.topic</name>
                                    <value>$(RTI_MQTTSHAPES_IO_USERNAME)/f/shapesdemo.shapesize</value>
                                </element>
                            </value>
                        </property>
                        <transformation plugin_name="MqttShapesPlugins::PrimitiveField">
                            <property>
                                <value>
                                    <element>
                                        <name>buffer_member</name>
                                        <value>payload.data</value>
                                    </element>
                                    <element>
                                        <name>field</name>
                                        <value>shapesize</value>
                                    </element>
                                    <element>
                                        <name>field_type</name>
                                        <value>long</value>
                                    </element>
                                </value>
                            </property>
                        </transformation>
                    </output>
                </route>
            </session>
        </domain_route>
    </routing_service>

</dds>
